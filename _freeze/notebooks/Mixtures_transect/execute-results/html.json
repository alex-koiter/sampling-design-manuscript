{
  "hash": "270a94847f3d5c1192dad3ae302ab910",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: MixSIAR results- Transect source, design specific mixture\nauthor: Alex Koiter\n---\n\n\n\n\n\n  \n## Load Libraries\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(MixSIAR)\n```\n:::\n\n\n\n\n\n\n## Fingerprints\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nfingerprints <- c(\"Li\", \"Cu\", \"Ca\", \"Be\", \"Co\")\n```\n:::\n\n\n\n\n\n\n## Load in data\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngeo_results <- read.csv(here::here(\"./notebooks/Geochemistry analysis - Copy 2.csv\")) %>%\n  pivot_longer(cols = Ag:Zr, names_to = \"Fingerprint\", values_to = \"value\") %>%\n  filter(Fingerprint %in% c(\"Ag\", \"Al\", \"As\",\"B\",\"Ba\",\"Be\",\"Bi\",\"Ca\",\"Cd\",\"Ce\",\"Co\", \"Cr\", \"Cs\", \"Cu\", \"Fe\", \"Ga\", \"Hf\", \"Hg\", \"In\", \"K\", \"La\", \"Li\", \"Mg\", \"Mn\", \"Mo\", \"Nb\", \"Ni\", \"P\", \"Pb\", \"Rb\", \"S\", \"Sb\", \"Sc\", \"Se\", \"Sn\", \"Sr\", \"Te\", \"Th\", \"Tl\", \"U\", \"V\", \"Y\", \"Zn\", \"Zr\")) %>% # excludes fingerprints that are below level of detection\n  dplyr::select(-X) %>% # don't need this column\n  filter(sample_design %in% c(\"Grid\", \"Transect\", \"Likely to erode\")) \n\ncol_results <- read.csv(here::here(\"./notebooks/final results revised.csv\")) %>%\n  pivot_longer(cols = X:B, names_to = \"Fingerprint\", values_to = \"value\") %>%\n  dplyr::select(-X.1) %>% # don't need this column\n  filter(sample_design %in% c(\"Grid\", \"Transect\", \"Likely to erode\")) %>%\n  mutate(Fingerprint = paste0(Fingerprint, \"_col\")) # appended _col as some of the colour coefficients have the same id eg Boron = B and Blue also = B\n\n\n# Bind data sets\nresults <- geo_results %>%\n  bind_rows(col_results) %>%\n  filter(Fingerprint %in% fingerprints)\n```\n:::\n\n\n\n\n\n\n## Virtual mixtures\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nproportions <- seq(0, 1, 0.05)\n\nmixtures <- results %>%\n  filter(sample_design %in% c(\"Transect\")) %>% \n  group_by(Fingerprint, site) %>%\n  summarise(avg =  mean(value)) %>%\n  pivot_wider(names_from = site, values_from = avg) %>%\n  mutate(mix_ag = map(Agriculture, ~.x * (1 - proportions)),\n         mix_forest = map(Forest, ~.x * proportions)) %>%\n  group_by(Fingerprint, Agriculture, Forest) %>%\n  summarize(mix = map2(mix_ag, mix_forest, ~data.frame(mix = .x + .y, prop_forest = proportions))) %>%\n  unnest(mix) %>%\n  pivot_wider(id_cols = prop_forest, names_from = Fingerprint, values_from = mix) %>%\n  nest(.by = prop_forest) %>%\n  mutate(path = here::here(paste0(\"./notebooks/Mixtures_transect/\", prop_forest, \".csv\")))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'Fingerprint'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'Fingerprint', 'Agriculture'. You can\noverride using the `.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nmixtures %>%\n  select(x = data, file = path) %>%\n  pwalk(write_csv)\n```\n:::\n\n\n\n\n\n\n## Sources\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsources <- results %>%\n  filter(sample_design == \"Transect\") %>%\n  group_by(site, Fingerprint) %>%\n  summarise(Mean = mean(value),\n            SD = sd(value)) %>%\n  pivot_longer(cols = c(\"Mean\", \"SD\"), names_to = \"parameter\", values_to = \"value\") %>%\n  mutate(variable = paste0(parameter, Fingerprint), parameter = NULL, Fingerprint = NULL) %>%\n  pivot_wider(names_from = variable, values_from = value) %>%\n  mutate(n = 14) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'site'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nwrite_csv(x = sources, file = here::here(\"./notebooks/Mixtures_transect/source.csv\"))\n```\n:::\n\n\n\n\n\n\n## Trophic enrichment factor (0)\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntef <- mutate(sources, across(where(is.numeric), ~0)) %>%\n  select(-n)\nwrite_csv(x = tef, file = here::here(\"./notebooks/Mixtures_transect/tef.csv\"))\n```\n:::\n\n\n\n\n\n\n## Unmixing\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nmodel_run <- mixtures |>\n  mutate(\n    mix = map(path, ~load_mix_data(filename = .x,\n                                   iso_names = fingerprints,\n                                   factors = NULL,\n                                   fac_random = NULL,\n                                   fac_nested = NULL,\n                                   cont_effects = NULL)),\n    source = map(mix, ~load_source_data(filename = here::here(\"./notebooks/Mixtures_transect/source.csv\"),\n                                        source_factors = NULL, \n                                        conc_dep = FALSE, \n                                        data_type = \"means\", \n                                        .x)),\n    discr = map(mix, ~load_discr_data(filename = here::here(\"./notebooks/Mixtures_transect/tef.csv\"), .x)))\n\nmodel_run <- model_run |> \n  mutate(filename = here::here(paste0(\"./notebooks/Mixtures_transect/MixSIAR_\", prop_forest, \".txt\")))\n\nmodel_run |>\n  select(filename, mix, source) |>\n  mutate(resid_err = FALSE, process_err = TRUE) |>\n  pwalk(write_JAGS_model)\n\nmodels <- model_run %>%\n  select(prop_forest, mix, source, discr, model_filename = filename) %>%\n  mutate(run = \"normal\", alpha.prior = 1) %>%\n  #slice(1:2) %>%\n  mutate(model = pmap(.l = select(., -prop_forest), run_model))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nmodule glm loaded\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n\nCompiling model graph\n   Resolving undeclared variables\n   Allocating nodes\nGraph information:\n   Observed stochastic nodes: 5\n   Unobserved stochastic nodes: 21\n   Total graph size: 196\n\nInitializing model\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Combine all model runs\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nfinal_results <- models %>%\n  mutate(output = map(model, ~ as.data.frame(.x$BUGSoutput$sims.matrix) %>%\n                       select(\"Agriculture\" = `p.global[1]`, \"Forest\" = `p.global[2]`)\n                     )) %>%\n  unnest(output)\n\nwrite_csv(x = final_results, file = here::here(\"./notebooks/Mixtures_transect/transect_final_results.csv\"))\n```\n:::\n\n\n\n\n\n\n## Sneek peek\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nggplot(data = final_results, aes(x = as.factor(prop_forest), y = Agriculture)) +\n  geom_boxplot() +\n  theme_bw() +\n  scale_y_continuous(expand = c(0,0.01))\n```\n\n::: {.cell-output-display}\n![](Mixtures_transect_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Mixtures_transect_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}