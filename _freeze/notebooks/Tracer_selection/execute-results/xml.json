{
  "hash": "a160ef572a4387fa106e4b4c74582edb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Tracer selection using composite mixtures\nauthor: Alex Koiter\n---\n\n\n\n\n\n\n\n\n\n\n## Load Libraries\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(ggfortify)\nlibrary(patchwork)\n```\n:::\n\n\n\n\n\n\n\n\n\n\n## % classified function\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nclassify <- function(data, model, by = \"site\", type = \"percent\") {\n  if(type == \"count\") x <- table(as.data.frame(data)[,\"site\"], model$class)\n  if(type == \"percent\") x <- diag(prop.table(table(as.data.frame(data)[,\"site\"], model$class), 1)) * 100\n  x\n}\n```\n:::\n\n\n\n\n\n\n\n\n\n\n## Load in data\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngeo_results <- read.csv(here::here(\"./notebooks/Geochemistry analysis - Copy 2.csv\")) %>%\n  pivot_longer(cols = Ag:Zr, names_to = \"Fingerprint\", values_to = \"value\") %>%\n  filter(Fingerprint %in% c(\"Ag\", \"Al\", \"As\",\"B\",\"Ba\",\"Be\",\"Bi\",\"Ca\",\"Cd\",\"Ce\",\"Co\", \"Cr\", \"Cs\", \"Cu\", \"Fe\", \"Ga\", \"Hf\", \"Hg\", \"In\", \"K\", \"La\", \"Li\", \"Mg\", \"Mn\", \"Mo\", \"Nb\", \"Ni\", \"P\", \"Pb\", \"Rb\", \"S\", \"Sb\", \"Sc\", \"Se\", \"Sn\", \"Sr\", \"Te\", \"Th\", \"Tl\", \"U\", \"V\", \"Y\", \"Zn\", \"Zr\")) %>% # excludes fingerprints that are below level of detection\n  dplyr::select(-X) %>% # don't need this column\n  filter(sample_design %in% c(\"Grid\", \"Transect\", \"Likely to erode\")) \n\ncol_results <- read.csv(here::here(\"./notebooks/final results revised.csv\")) %>%\n  pivot_longer(cols = X:B, names_to = \"Fingerprint\", values_to = \"value\") %>%\n  dplyr::select(-X.1) %>% # don't need this column\n  filter(sample_design %in% c(\"Grid\", \"Transect\", \"Likely to erode\")) %>%\n  mutate(Fingerprint = paste0(Fingerprint, \"_col\")) # appended _col as some of the colour coefficients have the same id eg Boron = B and Blue also = B\n\n\n# Bind data sets\nresults <- geo_results %>%\n  bind_rows(col_results) \n```\n:::\n\n\n\n\n\n\n\n\n\n\n## Virtual mixtures\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nproportions <- seq(0, 1, 0.05)\n\nmixtures <- results %>%\n  filter(sample_design %in% c(\"Grid\", \"Likely to erode\")) %>% # excluded transects as the transects are contained with in the grid this gives us all unique samples \n  group_by(Fingerprint, site) %>%\n  summarise(avg =  mean(value)) %>%\n  pivot_wider(names_from = site, values_from = avg) %>%\n  mutate(mix_ag = map(Agriculture, ~.x * (1 - proportions)),\n         mix_forest = map(Forest, ~.x * proportions)) %>%\n  group_by(Fingerprint, Agriculture, Forest) %>%\n  summarize(mix = map2(mix_ag, mix_forest, ~data.frame(mix = .x + .y, prop_forest = proportions))) %>%\n  unnest(mix) %>%\n  pivot_wider(id_cols = c(\"Fingerprint\", \"Agriculture\", \"Forest\"), names_from = prop_forest, values_from = mix) \n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'Fingerprint'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'Fingerprint', 'Agriculture'. You can\noverride using the `.groups` argument.\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n## Range test\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nrange <- results %>%\n  group_by(site, sample_design, Fingerprint) %>%\n  summarise(upper_lim = quantile(value, 0.75),\n            lower_lim = quantile(value, 0.25)) %>%\n  group_by(Fingerprint, sample_design) %>%\n  summarise(lower_lim = min(lower_lim),\n            upper_lim = max(upper_lim)) %>%\n  ungroup() %>%\n  left_join(mixtures) %>%\n  #dplyr::select(-c(Agriculture, Forest)) %>%\n  group_by(Fingerprint, sample_design) %>%\n  mutate(pass = all(round(`0`:`1`, 5) >= round(lower_lim, 5)) & all(round(`0`:`1`, 5) <= round(upper_lim, 5)))  ## rounding as differences as small as 10^-18 were being removed otherwise\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'site', 'sample_design'. You can override\nusing the `.groups` argument.\n`summarise()` has grouped output by 'Fingerprint'. You can override using the\n`.groups` argument.\nJoining with `by = join_by(Fingerprint)`\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n## Check Li\nggplot(data= filter(results, Fingerprint == \"Li\"), aes(x = sample_design, y  = value, colour = site)) +\n  geom_boxplot() +\n  geom_hline(yintercept = 5.72) + # lower limit transect\n  geom_hline(yintercept = 15.3) + # upper limit transect\n  geom_hline(yintercept = 15.7, colour = \"red\") + # 0% forest\n  geom_hline(yintercept = 6.42, colour = \"red\") # 100% forest\n```\n\n::: {.cell-output-display}\n![](Tracer_selection_files/figure-jats/unnamed-chunk-5-1.png)\n:::\n\n```{.r .cell-code .hidden}\ngrid_range <- filter(range, pass == TRUE , sample_design == \"Grid\") %>%\n  pull(Fingerprint)\n\ntransect_range <- filter(range, pass == TRUE , sample_design == \"Transect\") %>%\n  pull(Fingerprint)\n\nlikely_range <- filter(range, pass == TRUE , sample_design == \"Likely to erode\") %>%\n  pull(Fingerprint)\n\nrange_results <- filter(range, pass == TRUE) %>%\n  dplyr::select(Fingerprint, sample_design)\n\nrange_results %>%\n  group_by(sample_design) %>%\n  summarise(n = length(Fingerprint))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  sample_design       n\n  <chr>           <int>\n1 Grid               58\n2 Likely to erode    12\n3 Transect           50\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n## Mann-W test\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nwilcox_test <- range_results %>%\n  inner_join(results) %>%\n  nest(data = c(-sample_design, -Fingerprint)) %>%\n  mutate(test = map(data, ~wilcox.test(value ~ site, data = ., exact = FALSE))) %>%\n  mutate(p_value = map_dbl(test, ~ .$p.value),\n         statistic =  map_dbl(test, ~ .$statistic))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nJoining with `by = join_by(Fingerprint, sample_design)`\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngrid_wilcox <- filter(wilcox_test, p_value < 0.01 , sample_design == \"Grid\")\ngrid_wilcox\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 49 × 6\n# Groups:   Fingerprint, sample_design [49]\n   Fingerprint sample_design data              test     p_value statistic\n   <chr>       <chr>         <list>            <list>     <dbl>     <dbl>\n 1 Ag          Grid          <tibble [98 × 3]> <htest> 8.43e-15     2282.\n 2 Al          Grid          <tibble [98 × 3]> <htest> 1.48e-17     2401 \n 3 As          Grid          <tibble [98 × 3]> <htest> 8.37e-17     2372.\n 4 B_col       Grid          <tibble [98 × 3]> <htest> 4.72e-11     2127 \n 5 Be          Grid          <tibble [98 × 3]> <htest> 1.47e-17     2401 \n 6 Bi          Grid          <tibble [98 × 3]> <htest> 2.85e-16     2349 \n 7 Ca          Grid          <tibble [98 × 3]> <htest> 8.60e- 8     1954.\n 8 Cd          Grid          <tibble [98 × 3]> <htest> 1.54e- 7     1939 \n 9 Ce          Grid          <tibble [98 × 3]> <htest> 1.28e- 8     2002.\n10 Co          Grid          <tibble [98 × 3]> <htest> 3.35e-11     2134.\n# ℹ 39 more rows\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npull(grid_wilcox, Fingerprint)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Ag\"    \"Al\"    \"As\"    \"B_col\" \"Be\"    \"Bi\"    \"Ca\"    \"Cd\"    \"Ce\"   \n[10] \"Co\"    \"Cr\"    \"Cs\"    \"Cu\"    \"Fe\"    \"G_col\" \"Ga\"    \"Hf\"    \"Hg\"   \n[19] \"In\"    \"K\"     \"L_col\" \"La\"    \"Li\"    \"Mg\"    \"Nb\"    \"Ni\"    \"Rb\"   \n[28] \"S\"     \"Sb\"    \"Sc\"    \"Se\"    \"Sn\"    \"Sr\"    \"Te\"    \"Th\"    \"U\"    \n[37] \"V\"     \"X_col\" \"Y\"     \"Y_col\" \"Z_col\" \"Zr\"    \"a_col\" \"b_col\" \"c_col\"\n[46] \"h_col\" \"u_col\" \"v_col\" \"x_col\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ntransect_wilcox <- filter(wilcox_test, p_value < 0.01 , sample_design == \"Transect\")\n  transect_wilcox\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 33 × 6\n# Groups:   Fingerprint, sample_design [33]\n   Fingerprint sample_design data              test       p_value statistic\n   <chr>       <chr>         <list>            <list>       <dbl>     <dbl>\n 1 Ag          Transect      <tibble [28 × 3]> <htest> 0.000319        176 \n 2 Al          Transect      <tibble [28 × 3]> <htest> 0.00000734      196 \n 3 As          Transect      <tibble [28 × 3]> <htest> 0.00000920      195 \n 4 B_col       Transect      <tibble [28 × 3]> <htest> 0.00102         170 \n 5 Be          Transect      <tibble [28 × 3]> <htest> 0.00000734      196 \n 6 Ca          Transect      <tibble [28 × 3]> <htest> 0.000310        177 \n 7 Cd          Transect      <tibble [28 × 3]> <htest> 0.00930         155 \n 8 Ce          Transect      <tibble [28 × 3]> <htest> 0.00152         168.\n 9 Co          Transect      <tibble [28 × 3]> <htest> 0.000433        175 \n10 Cr          Transect      <tibble [28 × 3]> <htest> 0.00000703      196.\n# ℹ 23 more rows\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n  pull(transect_wilcox, Fingerprint)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Ag\"    \"Al\"    \"As\"    \"B_col\" \"Be\"    \"Ca\"    \"Cd\"    \"Ce\"    \"Co\"   \n[10] \"Cr\"    \"Cs\"    \"Fe\"    \"Ga\"    \"In\"    \"La\"    \"Ni\"    \"S\"     \"Sb\"   \n[19] \"Sc\"    \"Se\"    \"Sn\"    \"Sr\"    \"Te\"    \"U\"     \"V\"     \"Y\"     \"Z_col\"\n[28] \"a_col\" \"b_col\" \"c_col\" \"h_col\" \"u_col\" \"x_col\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlikely_wilcox <- filter(wilcox_test, p_value < 0.01 , sample_design == \"Likely to erode\") \nlikely_wilcox\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 6\n# Groups:   Fingerprint, sample_design [10]\n   Fingerprint sample_design   data              test     p_value statistic\n   <chr>       <chr>           <list>            <list>     <dbl>     <dbl>\n 1 Ba          Likely to erode <tibble [16 × 3]> <htest> 0.000830         0\n 2 Bi          Likely to erode <tibble [16 × 3]> <htest> 0.000830        64\n 3 Co          Likely to erode <tibble [16 × 3]> <htest> 0.00710         58\n 4 Cs          Likely to erode <tibble [16 × 3]> <htest> 0.00719         58\n 5 Li          Likely to erode <tibble [16 × 3]> <htest> 0.000931        64\n 6 Mo          Likely to erode <tibble [16 × 3]> <htest> 0.000931        64\n 7 Pb          Likely to erode <tibble [16 × 3]> <htest> 0.000939        64\n 8 Sn          Likely to erode <tibble [16 × 3]> <htest> 0.000448        64\n 9 Tl          Likely to erode <tibble [16 × 3]> <htest> 0.00693         58\n10 U           Likely to erode <tibble [16 × 3]> <htest> 0.000923        64\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\npull(likely_wilcox, Fingerprint)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Ba\" \"Bi\" \"Co\" \"Cs\" \"Li\" \"Mo\" \"Pb\" \"Sn\" \"Tl\" \"U\" \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nwilcox_results <- filter(wilcox_test, p_value < 0.01) %>%\n  dplyr::select(Fingerprint, sample_design)\n\nwilcox_results %>%\n  group_by(sample_design) %>%\n  summarise(n = length(Fingerprint))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  sample_design       n\n  <chr>           <int>\n1 Grid               49\n2 Likely to erode    10\n3 Transect           33\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n## DFA\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndfa_test <- wilcox_results %>%\n  inner_join(results) %>%\n  ungroup() %>%\n  nest(data = c(-sample_design)) %>%\n  mutate(newdata = map(data, ~pivot_wider(., names_from = Fingerprint, values_from = value))) %>%\n  mutate(newdata = map(newdata, ~dplyr::select(., -sample_number))) %>%\n  mutate(test = map(newdata, ~ klaR::greedy.wilks(site ~ ., data =. , niveau = 0.1, na.action = \"na.omit\"))) %>%\n  mutate(Fingerprint = map(test, ~ .$results$vars)) %>%\n  mutate(wilks = map(test, ~.x$results$Wilks.lambda))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nJoining with `by = join_by(Fingerprint, sample_design)`\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ngrid_dfa <- dfa_test %>%\n  unnest(Fingerprint) %>%\n  filter(sample_design == \"Grid\") %>%\n  pull(Fingerprint)\ngrid_dfa\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Li\"    \"a_col\" \"Fe\"    \"Co\"    \"Hg\"    \"x_col\" \"Cs\"    \"La\"    \"Ni\"   \n[10] \"Nb\"    \"h_col\" \"b_col\" \"Rb\"    \"Ca\"    \"Sr\"    \"c_col\"\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ntransect_dfa <- \n  dfa_test %>%\n  unnest(Fingerprint) %>%\n  filter(sample_design == \"Transect\") %>%\n  pull(Fingerprint)\ntransect_dfa\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Fe\"    \"a_col\" \"Co\"   \n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlikely_dfa <- \n  dfa_test %>%\n  unnest(Fingerprint) %>%\n  filter(sample_design == \"Likely to erode\") %>%\n  pull(Fingerprint)\nlikely_dfa\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Li\" \"U\"  \"Bi\"\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n## PCA\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_grid <- results %>% \n  filter(sample_design == \"Grid\") %>%\n  filter(Fingerprint %in% grid_dfa) %>%\n  pivot_wider(names_from = Fingerprint, values_from = value) %>%\n  dplyr::select(-sample_design, -sample_number)\n\ndf_transect<- results %>%\n  filter(sample_design == \"Transect\") %>%\n  filter(Fingerprint %in% transect_dfa) %>%\n  pivot_wider(names_from = Fingerprint, values_from = value) %>%\n  dplyr::select(-sample_design, -sample_number)\n\ndf_likely <- results %>%\n  filter(sample_design == \"Likely to erode\") %>%\n  filter(Fingerprint %in% likely_dfa) %>%\n  pivot_wider(names_from = Fingerprint, values_from = value) %>%\n  dplyr::select(-sample_design, -sample_number)\n\npca_grid <- prcomp(select(df_grid, 2:ncol(df_grid)), scale. = TRUE)\n\nautoplot(pca_grid)\n```\n\n::: {.cell-output-display}\n![](Tracer_selection_files/figure-jats/unnamed-chunk-8-1.png)\n:::\n\n```{.r .cell-code .hidden}\np1 <- autoplot(pca_grid, \n               data = df_grid, \n               colour = 'site',\n               frame = TRUE, \n               frame.type = 'norm') +\n  theme_bw() +\n  scale_colour_viridis_d(begin = 0, end = 0.6) +\n  scale_fill_viridis_d(begin = 0, end = 0.6) +\n  theme(legend.title = element_blank()) +\n  labs(title = \"Grid\")\np1\n```\n\n::: {.cell-output-display}\n![](Tracer_selection_files/figure-jats/unnamed-chunk-8-2.png)\n:::\n\n```{.r .cell-code .hidden}\npca_transect <- prcomp(select(df_transect, 2:ncol(df_transect)) , scale. = TRUE)\nautoplot(pca_transect)\n```\n\n::: {.cell-output-display}\n![](Tracer_selection_files/figure-jats/unnamed-chunk-8-3.png)\n:::\n\n```{.r .cell-code .hidden}\np2 <- autoplot(pca_transect, \n               data = df_transect, \n               colour = 'site', \n               frame = TRUE, \n               frame.type = 'norm') +\n  theme_bw() +\n  scale_colour_viridis_d(begin = 0, end = 0.6) +\n  scale_fill_viridis_d(begin = 0, end = 0.6) +\n  theme(legend.title = element_blank()) +\n  labs(title = \"Transect\")\np2\n```\n\n::: {.cell-output-display}\n![](Tracer_selection_files/figure-jats/unnamed-chunk-8-4.png)\n:::\n\n```{.r .cell-code .hidden}\npca_likely <- prcomp(select(df_likely, 2:ncol(df_likely)) , scale. = TRUE)\nautoplot(pca_likely)\n```\n\n::: {.cell-output-display}\n![](Tracer_selection_files/figure-jats/unnamed-chunk-8-5.png)\n:::\n\n```{.r .cell-code .hidden}\np3 <- autoplot(pca_likely, \n               data = df_likely, \n               colour = 'site', \n               frame = TRUE, \n               frame.type = 'norm') +\n  theme_bw() +\n  scale_colour_viridis_d(begin = 0, end = 0.6) +\n  scale_fill_viridis_d(begin = 0, end = 0.6) +\n  theme(legend.title = element_blank())+\n  labs(title = \"Likely to erode\")\np3\n```\n\n::: {.cell-output-display}\n![](Tracer_selection_files/figure-jats/unnamed-chunk-8-6.png)\n:::\n:::\n\n::: {#cell-fig-pcaplot .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-pcaplot\n#| fig-cap: \"Principle component analysis demonstrating the discriminatory ability for the selected fingerprints for the three sampling designs.\"\np4 <- p1 + p2 + p3 +\n  plot_layout(guides = 'collect') & theme(legend.position = \"bottom\")\np4\n```\n\n::: {.cell-output-display}\n![Principle component analysis demonstrating the discriminatory ability for the selected fingerprints for the three sampling designs.](Tracer_selection_files/figure-jats/fig-pcaplot-1.png){#fig-pcaplot}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\np5 <- autoplot(pca_grid, \n         data = df_grid, \n         colour = 'site',\n         frame = TRUE, \n         frame.type = 'norm',\n         loadings = TRUE, loadings.colour = 'blue',\n         loadings.label = TRUE, loadings.label.size = 3) +\n  theme_bw() +\n  scale_colour_viridis_d(begin = 0, end = 0.6) +\n  scale_fill_viridis_d(begin = 0, end = 0.6) +\n  theme(legend.title = element_blank()) +\n  labs(title = \"Grid\")\n\ngrid_loading <- as.data.frame(pca_grid$rotation[,1:2]) %>%\n  mutate(element = rownames(.)) %>%\n  pivot_longer(cols = c(PC1, PC2), names_to = \"PC\", values_to = \"value\")\n\nggplot(data = grid_loading, aes(x = element, y = value)) +\n  geom_col() +\n  facet_wrap(~PC)\n```\n\n::: {.cell-output-display}\n![](Tracer_selection_files/figure-jats/unnamed-chunk-10-1.png)\n:::\n\n```{.r .cell-code .hidden}\np6 <- autoplot(pca_transect, \n         data = df_transect, \n         colour = 'site',\n         frame = TRUE, \n         frame.type = 'norm',\n         loadings = TRUE, loadings.colour = 'blue',\n         loadings.label = TRUE, loadings.label.size = 3) +\n  theme_bw() +\n  scale_colour_viridis_d(begin = 0, end = 0.6) +\n  scale_fill_viridis_d(begin = 0, end = 0.6) +\n  theme(legend.title = element_blank()) +\n  labs(title = \"Transect\")\n\ntransect_loading <- as.data.frame(pca_transect$rotation[,1:2]) %>%\n  mutate(element = rownames(.)) %>%\n  pivot_longer(cols = c(PC1, PC2), names_to = \"PC\", values_to = \"value\")\n\nggplot(data = transect_loading, aes(x = element, y = value)) +\n  geom_col() +\n  facet_wrap(~PC)\n```\n\n::: {.cell-output-display}\n![](Tracer_selection_files/figure-jats/unnamed-chunk-10-2.png)\n:::\n\n```{.r .cell-code .hidden}\np7 <- autoplot(pca_likely, \n         data = df_likely, \n         colour = 'site',\n         frame = TRUE, \n         frame.type = 'norm',\n         loadings = TRUE, loadings.colour = 'blue',\n         loadings.label = TRUE, loadings.label.size = 3) +\n  theme_bw() +\n  scale_colour_viridis_d(begin = 0, end = 0.6) +\n  scale_fill_viridis_d(begin = 0, end = 0.6) +\n  theme(legend.title = element_blank()) +\n  labs(title = \"Likely\")\n\nlikely_loading <- as.data.frame(pca_likely$rotation[,1:2]) %>%\n  mutate(element = rownames(.)) %>%\n  pivot_longer(cols = c(PC1, PC2), names_to = \"PC\", values_to = \"value\")\n\nggplot(data = likely_loading, aes(x = element, y = value)) +\n  geom_col() +\n  facet_wrap(~PC)\n```\n\n::: {.cell-output-display}\n![](Tracer_selection_files/figure-jats/unnamed-chunk-10-3.png)\n:::\n\n```{.r .cell-code .hidden}\n#ggsave(filename = \"Figures R1/all_pca.png\", plot = p4, width = 174, height = 100, units = \"mm\", dpi = 600)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsupfig5 <- p5 + p6 + p7 +\n  plot_layout(guides = 'collect') & theme(legend.position = \"bottom\")\nsupfig5\n```\n\n::: {.cell-output-display}\n![](Tracer_selection_files/figure-jats/unnamed-chunk-11-1.png)\n:::\n\n```{.r .cell-code .hidden}\nsaveRDS(supfig5, file = here::here(\"./images/supfig5.rds\"))\n#ggsave(filename = \"images/pca_loading.png\", plot = p8, width = 174, height = 100, units = \"mm\", dpi = 600)\n```\n:::\n\n\n\n\n\n\n\n\n\n\n\n\n## Assess accuracy of discrimination \n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngrid.lda <- MASS::lda(site ~ ., data = df_grid, na.action = \"na.omit\", CV = T)\ntransect.lda <- MASS::lda(site ~ ., data = df_transect, na.action = \"na.omit\", CV = T)\nlikely.lda <- MASS::lda(site ~ ., data = df_likely, na.action = \"na.omit\", CV = T)\n```\n:::\n\n\n\n\n\n\n\n\n\n\n### Grid \n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntable(as.data.frame(df_grid)[,\"site\"], grid.lda$class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             \n              Agriculture Forest\n  Agriculture          49      0\n  Forest                0     49\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndiag(prop.table(table(as.data.frame(df_grid)[,\"site\"], grid.lda$class), 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAgriculture      Forest \n          1           1 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n### Transect\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntable(as.data.frame(df_transect)[,\"site\"], transect.lda$class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             \n              Agriculture Forest\n  Agriculture          14      0\n  Forest                0     14\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndiag(prop.table(table(as.data.frame(df_transect)[,\"site\"], transect.lda$class), 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAgriculture      Forest \n          1           1 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n### Likely to erode\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntable(as.data.frame(df_likely)[,\"site\"], likely.lda$class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             \n              Agriculture Forest\n  Agriculture           8      0\n  Forest                0      8\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndiag(prop.table(table(as.data.frame(df_likely)[,\"site\"], likely.lda$class), 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAgriculture      Forest \n          1           1 \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n###  total percent correct  \n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nsum(diag(prop.table(table(as.data.frame(df_grid)[,\"site\"], grid.lda$class))))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsum(diag(prop.table(table(as.data.frame(df_transect)[,\"site\"], transect.lda$class))))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nsum(diag(prop.table(table(as.data.frame(df_likely)[,\"site\"], likely.lda$class))))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n\n## Percent Classified correctly and Wilks Lamda\n### Grid design\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ngrid_classify <- tibble(n = 1:length(grid_dfa),\n            params = map(n, ~grid_dfa[1:.x])) %>%\n  mutate(params = map_chr(params, ~paste0(.x, collapse = \" + \")),\n         f = map(params, ~as.formula(paste0(\"site ~ \", .x))),\n         m = map(f, ~MASS::lda(.x, data = df_grid, na.action = \"na.omit\", CV = TRUE)),\n         c = map_df(m, ~classify(data = df_grid, model = .x))) %>%\n  select(-n, -f, -m) %>%\n  mutate(wilks = dfa_test$wilks[dfa_test$sample_design == \"Grid\"][[1]])\n\ngrid_classify\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 3\n   params                                                  c$Agriculture   wilks\n   <chr>                                                           <dbl>   <dbl>\n 1 Li                                                                100 0.0620 \n 2 Li + a_col                                                        100 0.0441 \n 3 Li + a_col + Fe                                                   100 0.0276 \n 4 Li + a_col + Fe + Co                                              100 0.0233 \n 5 Li + a_col + Fe + Co + Hg                                         100 0.0217 \n 6 Li + a_col + Fe + Co + Hg + x_col                                 100 0.0188 \n 7 Li + a_col + Fe + Co + Hg + x_col + Cs                            100 0.0178 \n 8 Li + a_col + Fe + Co + Hg + x_col + Cs + La                       100 0.0145 \n 9 Li + a_col + Fe + Co + Hg + x_col + Cs + La + Ni                  100 0.0134 \n10 Li + a_col + Fe + Co + Hg + x_col + Cs + La + Ni + Nb             100 0.0128 \n11 Li + a_col + Fe + Co + Hg + x_col + Cs + La + Ni + Nb …           100 0.0123 \n12 Li + a_col + Fe + Co + Hg + x_col + Cs + La + Ni + Nb …           100 0.0114 \n13 Li + a_col + Fe + Co + Hg + x_col + Cs + La + Ni + Nb …           100 0.0110 \n14 Li + a_col + Fe + Co + Hg + x_col + Cs + La + Ni + Nb …           100 0.00970\n15 Li + a_col + Fe + Co + Hg + x_col + Cs + La + Ni + Nb …           100 0.00925\n16 Li + a_col + Fe + Co + Hg + x_col + Cs + La + Ni + Nb …           100 0.00886\n# ℹ 1 more variable: c$Forest <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n### Transect design\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ntransect_classify <- tibble(n = 1:length(transect_dfa),\n                        params = map(n, ~transect_dfa[1:.x])) %>%\n  mutate(params = map_chr(params, ~paste0(.x, collapse = \" + \")),\n         f = map(params, ~as.formula(paste0(\"site ~ \", .x))),\n         m = map(f, ~MASS::lda(.x, data = df_transect, na.action = \"na.omit\", CV = TRUE)),\n         c = map_df(m, ~classify(data = df_transect, model = .x))) %>%\n  select(-n, -f, -m) %>%\n  mutate(wilks = dfa_test$wilks[dfa_test$sample_design == \"Transect\"][[1]])\n\ntransect_classify\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  params          c$Agriculture $Forest  wilks\n  <chr>                   <dbl>   <dbl>  <dbl>\n1 Fe                        100     100 0.0515\n2 Fe + a_col                100     100 0.0252\n3 Fe + a_col + Co           100     100 0.0185\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n### Likely to erode design\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlikely_classify <- tibble(n = 1:length(likely_dfa),\n                            params = map(n, ~likely_dfa[1:.x])) %>%\n  mutate(params = map_chr(params, ~paste0(.x, collapse = \" + \")),\n         f = map(params, ~as.formula(paste0(\"site ~ \", .x))),\n         m = map(f, ~MASS::lda(.x, data = df_likely, na.action = \"na.omit\", CV = TRUE)),\n         c = map_df(m, ~classify(data = df_likely, model = .x))) %>%\n  select(-n, -f, -m) %>%\n  mutate(wilks = dfa_test$wilks[dfa_test$sample_design == \"Likely to erode\"][[1]])\n\nlikely_classify\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  params      c$Agriculture $Forest   wilks\n  <chr>               <dbl>   <dbl>   <dbl>\n1 Li                    100     100 0.0237 \n2 Li + U                100     100 0.0112 \n3 Li + U + Bi           100     100 0.00762\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n## Mean and SD plotting\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nplotting3 <- results %>%\n  filter(Fingerprint %in% unique(c(grid_dfa, likely_dfa, transect_dfa))) %>%\n  group_by(Fingerprint, sample_design, site) %>%\n  summarise(avg = mean(value),\n            sd = sd(value), \n            se = sd(value)/(n()^0.5)) %>%\n  rename(\"Source\" = site) %>%\n  mutate(Fingerprint = as.factor(Fingerprint)) %>%\n  mutate(Fingerprint = fct_recode(Fingerprint, \"italic(`a*`)\" = \"a_col\", \"italic(`b*`)\" = \"b_col\", \"italic(`c*`)\" = \"c_col\", \"italic(`h*`)\" = \"h_col\", \"italic(`x*`)\" = \"x_col\", \"`Ca (%)`\" = \"Ca\"))\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n`summarise()` has grouped output by 'Fingerprint', 'sample_design'. You can\noverride using the `.groups` argument.\n```\n\n\n:::\n:::\n\n::: {#cell-fig-sdplot-test .cell}\n\n```{.r .cell-code .hidden}\n#| label: fig-sdplot-test\n#| fig-cap: \"Means and standard deviations of the fingerprints used in the mixing model.\"\np1 <- ggplot(data = plotting3, aes(x = sample_design, y = avg, colour = Source)) +\n  geom_point(position = position_dodge(width = 0.5)) +\n  geom_errorbar(data = plotting3, aes(ymax = avg + sd, ymin = avg -sd, x = sample_design), position = position_dodge(width = 0.5), width = 0.5) +\n  scale_colour_viridis_d(begin = 0, end = 0.6) +\n  theme_bw() +\n  labs(y = \"Concentation (ppm) or value\") +\n  theme(axis.title.x = element_blank(),\n        axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),\n        legend.position = \"bottom\",\n        legend.title = element_blank()) +\n  facet_wrap(~Fingerprint, ncol = 4, scales = \"free_y\", labeller = \"label_parsed\")\n\np1\n```\n\n::: {.cell-output-display}\n![Means and standard deviations of the fingerprints used in the mixing model.](Tracer_selection_files/figure-jats/fig-sdplot-test-1.png){#fig-sdplot-test}\n:::\n:::",
    "supporting": [
      "Tracer_selection_files/figure-jats"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}